<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:ext="http://nextthought.com/ntp/ext"
			xmlns:oauth="http://nextthought.com/ntp/oauth"
			xmlns:zcml="http://namespaces.zope.org/zcml">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />
	<include package="zope.security" />

    <!-- Adapters -->
    <adapter factory=".client.GoToWebinarClient"
             for=".interfaces.IGoToWebinarAuthorizedIntegration
                  pyramid.interfaces.IRequest"
             provides=".interfaces.IWebinarClient" />

    <adapter factory=".adapters.webinar_to_auth_integration"
             for=".interfaces.IWebinar"
             provides=".interfaces.IGoToWebinarAuthorizedIntegration" />

    <adapter factory=".adapters.webinar_to_client"
             for=".interfaces.IWebinar
                  pyramid.interfaces.IRequest"
             provides=".interfaces.IWebinarClient" />

    <adapter factory=".adapters.WebinarRegistrationMetadataContainerFactory"
             provides=".interfaces.IWebinarRegistrationMetadataContainer"
             for=".interfaces.IWebinar" />

    <adapter factory=".adapters.webinar_to_course"
             provides="nti.contenttypes.courses.interfaces.ICourseInstance"
             for=".interfaces.IWebinar" />

    <!-- Decorators -->
    <subscriber factory=".decorators._WebinarAuthorizeDecorator"
                provides="nti.externalization.interfaces.IExternalMappingDecorator"
                for=".interfaces.IWebinarIntegration
                     pyramid.interfaces.IRequest"  />

    <subscriber factory=".decorators._AuthorizedWebinarDecorator"
                provides="nti.externalization.interfaces.IExternalMappingDecorator"
                for=".interfaces.IWebinarAuthorizedIntegration
                     pyramid.interfaces.IRequest"  />

    <subscriber factory=".decorators._WebinarDecorator"
                provides="nti.externalization.interfaces.IExternalMappingDecorator"
                for=".interfaces.IWebinar
                     pyramid.interfaces.IRequest"  />

    <!-- Externalization -->
    <include package="nti.externalization" file="meta.zcml" />
    <include package="nti.externalization" />

    <ext:registerAutoPackageIO
        root_interfaces=".interfaces.IWebinar
                         .interfaces.IWebinarField
                         .interfaces.IWebinarAsset
                         .interfaces.IWebinarSession
                         .interfaces.IWebinarQuestion
                         .interfaces.IWebinarCollection
                         .interfaces.IWebinarIntegration
                         .interfaces.IWebinarRegistrationFields
                         .interfaces.IWebinarRegistrationMetadata
                         .interfaces.IWebinarAuthorizedIntegration
                         .interfaces.IGoToWebinarAuthorizedIntegration"
        modules=".integration .assets .client_models" />

    <!-- Internalization -->
    <adapter factory=".client_models._webinar_field_factory"
             for="dict"
             provides=".interfaces.IWebinarField" />

    <adapter factory=".client_models._webinar_question_factory"
             for="dict"
             provides=".interfaces.IWebinarQuestion" />

    <adapter factory=".client_models._webinar_registration_fields_factory"
             for="dict"
             provides=".interfaces.IWebinarRegistrationFields" />

    <adapter factory=".integration._auth_webinar_factory"
             for="dict"
             provides=".interfaces.IGoToWebinarAuthorizedIntegration" />

    <adapter factory=".client_models._webinar_factory"
             for="dict"
             provides=".interfaces.IWebinar" />

    <adapter factory=".client_models._webinar_session_factory"
             for="dict"
             provides=".interfaces.IWebinarSession" />

    <adapter factory=".client_models._webinar_collection_factory"
             for="list"
             provides=".interfaces.IWebinarCollection" />

    <adapter factory=".internalization._WebinarAssetUpdater"
             provides="nti.externalization.interfaces.IInternalObjectUpdater"
             for=".interfaces.IWebinarAsset" />

    <!-- Integration -->
    <utility factory=".integration.WebinarIntegrationProvider" />

    <!-- Webinar auth (localhost)-->
    <include package="nti.common" file="meta.zcml" />

    <configure zcml:condition="have devmode">
        <oauth:registerOAuthKeys
                apiKey="Gd94qpGWBETXoSJDj57if13tgr2aHrPE"
                secretKey="B8rJgJSHUsJ6UqFC"
                id="webinar" />
    </configure>
</configure>
